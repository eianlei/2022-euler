/** https://projecteuler.net/problem=25
 * solution in Javascript
 * ian.leiman@gmail.com
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * The first 12 terms are
 * F(1)= 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, F(12) = 144, ...
 * The 12th term, F(12), is the first term to contain three digits.
 * What is the index of the first term in the Fibonacci sequence to contain 1000 digits?
 * 
 * execute this on command line if you have node installed
 * node .\p025_euler.js
 * 
 * Answer:  4782
 */
 console.log("Solving project Euler problem #025 using several algorithms");
 const DEBUG = false; // true; // turn true if you want to see all
 if (DEBUG) console.log("DEBUG is on, show iterations");
 
 /** brute force and using BigInt data type
  * also using string conversions to find out number of digits
  */
console.time("1");
 var f1 = BigInt(1);
 var f2 = BigInt(1);
 var f3 = BigInt(2);
 var f3str ="";
 var f3strLen = 0;
 var index = 2;
 do { // loop to the max
    index += 1;
    f3 = f1 + f2; // next fibonacci number
    f1 = f2; // shift
    f2 = f3; // shift
    f3str = String(f3);
    f3strLen = f3str.length;
    if (DEBUG) console.log( f3strLen);
} while (f3strLen < 1000);
console.log("result from algorithm 1: " + index);
console.timeEnd("1");

 /** brute force and using BigInt data type
  * same as previous but now just compare to BigInt(10n**999n)
  */
  console.time("2");
  var f1 = BigInt(1);
  var f2 = BigInt(1);
  var f3 = BigInt(2);
  var index = 2;
  var max = BigInt(10n**999n);
  do { // loop to the max
     index += 1;
     f3 = f1 + f2; // next fibonacci number
     f1 = f2; // shift
     f2 = f3; // shift
 } while (f3 < max);
 console.log("result from algorithm 2: " + index);
 console.timeEnd("2");

 /** mathematical solution, https://www.goldennumber.net/fibonacci-series/
  * Fibonacci terms converge to (n)*Phi=(n+1), where Phi is the Golden Ratio (1+sqrt5)/2 = 1.618...
  * therefore there is a formula to solve this problem, coded below
  */
  console.time("3");
 var result = Math.ceil( (1000 - 1 + Math.log10(Math.sqrt(5))) / (Math.log10((1+Math.sqrt(5))/2) ) );
 console.log("result from algorithm 3: " + result);
 console.timeEnd("3");
