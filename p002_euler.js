/** https://projecteuler.net/problem=2
 * solution in Javascript
 * ian.leiman@gmail.com
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 * 
 * execute this on command line if you have node installed
 * node .\p002_euler.js
 * 
 * Answer:  4613732
 */
console.log("Solving project Euler problem #002 using several algorithms");
const DEBUG = false; // true; // turn true if you want to see all
if (DEBUG) console.log("DEBUG is on, show iterations");

// brute force method, just loop through entire fibonacci sequence
console.time("1");
var max = 4000000;
var sum1 = 0;
var a = 1;
var b = 1;
var c = 0;
while (b < max) { // loop to the max
    if (b % 2 == 0) sum1 += b; // if even then add to the sum1
    c = a + b; // next fibonacci number
    a = b; // shift
    b = c; // shift
    if (DEBUG) console.log(a, b, sum1);
}

console.log("result from algorithm 1: " + sum1);
console.timeEnd("1");

// with some math, we see that every 3rd fibonacci number is even
// skip the odd values then, this reduces the loop iterations by 1/3
console.time("2");
var max = 4000000;
var sum2 = 0;
var a = 1;
var b = 1;
var c = 2;
while (b < max) { // loop to the max
    sum2 += c // we only add even numbers because
    a = b + c; // we shift over odd numbers
    b = c + a;
    c = a + b;
    if (DEBUG) console.log(a, b, sum2);
}
console.log("result from algorithm 2: " + sum2);
console.timeEnd("2");

// with more math we can prove that F(n) = 4*F(n-3)+F(n-6)
// and do the summing really quickly and with few iterations
console.time("3");
var max = 4000000;
var n1 = 2;
var n3 = 8;
var n6 = 34;
var sum3 = 2 + 8;
do  { 
    sum3 += n6;
    n1 = n3;
    n3 = n6;
    n6 = 4 * n3 + n1;
    if (DEBUG) console.log(n1, n3, sum3);
} while (n6 < max);
console.log("result from algorithm 3: " + sum3);
console.timeEnd("3");